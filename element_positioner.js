// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.ElementPositioner = (function() {

    function ElementPositioner() {
      this.restoreClickBindingsToElements = __bind(this.restoreClickBindingsToElements, this);

      this.removeClickBindingsFromElements = __bind(this.removeClickBindingsFromElements, this);

      this.displayResult = __bind(this.displayResult, this);

      this.deactivate = __bind(this.deactivate, this);

      this.activate = __bind(this.activate, this);
      this.elements = $('p');
      this.draggable = null;
      this.active = false;
    }

    ElementPositioner.prototype.activate = function() {
      this.removeClickBindingsFromElements();
      this.draggable = this.elements.draggable({
        stack: '*'
      });
      return this.active = true;
    };

    ElementPositioner.prototype.deactivate = function() {
      this.restoreClickBindingsToElements();
      this.draggable.draggable("option", "disabled", true);
      this.active = false;
      return this.displayResult();
    };

    ElementPositioner.prototype.displayResult = function() {
      var styleString,
        _this = this;
      styleString = "";
      this.elements.each(function(i, e) {
        var selector;
        e = $(e);
        selector = e.attr('id') != null ? "#" + (e.attr('id')) : e.getPath();
        return styleString += "" + selector + " { left: " + (e.css('left')) + "; top: " + (e.css('top')) + "; z-index: " + (e.css('z-index')) + "; }\n";
      });
      return console.log(styleString);
    };

    ElementPositioner.prototype.removeClickBindingsFromElements = function() {
      return this.elements.unbind('click');
    };

    ElementPositioner.prototype.restoreClickBindingsToElements = function() {};

    return ElementPositioner;

  })();

}).call(this);
